# Continuous Integration Pipeline for VS Code Extension
#
# This workflow provides comprehensive testing and quality assurance for the VS Code extension.
# It runs on every pull request and push to the main branch.
#
# Features:
# - Multi-platform testing (Linux/Windows/macOS) - can be controlled with 'full-test' input  
# - Multiple Node.js versions (18.x, 20.x)
# - Multiple VS Code versions (stable, insiders)
# - Code quality checks (ESLint, knip, npm audit)
# - Automated packaging validation
#
# Usage:
# - Automatically triggered on PR/push events
# - Use workflow_dispatch with 'full-test: true' to run cross-platform tests
# - All quality gates must pass before merging
#
# For more information: https://code.visualstudio.com/api/working-with-extensions/continuous-integration

name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      full-test:
        description: 'Run tests on all platforms (Linux, Windows, macOS)'
        required: false
        default: false
        type: boolean

jobs:
  test:
    strategy:
      matrix:
        # Run on multiple platforms only when explicitly requested via workflow_dispatch
        # Default: Ubuntu only for faster CI, Full test: All platforms
        os: ${{ inputs.full-test && fromJSON('["ubuntu-latest", "windows-latest", "macos-latest"]') || fromJSON('["ubuntu-latest"]') }}
        node-version: [18.x, 20.x]
        vscode-version: [stable, insiders]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Check for unused dependencies
      run: npm run knip
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Run tests (Linux)
      if: runner.os == 'Linux'
      run: xvfb-run -a npm test
      env:
        VSCODE_TEST_VERSION: ${{ matrix.vscode-version }}
      
    - name: Run tests (Windows/macOS)
      if: runner.os != 'Linux'
      run: npm test
      env:
        VSCODE_TEST_VERSION: ${{ matrix.vscode-version }}
      
    - name: Package extension
      run: npm run vscode:prepublish

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run audit
      run: npm audit --audit-level=moderate
      
    - name: Check package integrity
      run: npm run compile && npm run vscode:prepublish