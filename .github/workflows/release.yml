name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  # Run comprehensive tests including VS Code integration before release
  pre-release-tests:
    name: Pre-Release Testing (Full Suite)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Check for unused dependencies
      run: npm run knip
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Run unit tests
      run: npm run test:unit
      
    - name: Run VS Code integration tests (with fallback)
      run: xvfb-run -a node scripts/test.js
      env:
        VSCODE_TEST_VERSION: stable
      # Note: This will fall back to unit tests if VS Code download fails
      
    - name: Package extension
      run: npm run vscode:prepublish
      
    - name: Verify package
      run: npm run package-check

  publish:
    name: Publish Release
    needs: pre-release-tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build and package
      run: npm run vscode:prepublish
      
    - name: Create package
      run: npm run package-check
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./acmeportal-*.vsix
        asset_name: acme-portal-extension.vsix
        asset_content_type: application/zip
        
    - name: Publish to VS Code Marketplace
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: |
        if [ -z "${{ secrets.VSCE_PAT }}" ]; then
          echo "‚ö†Ô∏è  VSCE_PAT secret not configured - skipping marketplace publishing"
          echo "To enable marketplace publishing, configure VSCE_PAT secret in repository settings"
          exit 0
        else
          echo "üöÄ Publishing to VS Code Marketplace..."
          npx vsce publish --pat ${{ secrets.VSCE_PAT }}
        fi