{
  "name": "acmeportal",
  "displayName": "ACME Portal",
  "publisher": "blackwhitehere",
  "description": "UI to manage python flow deployments via acme-portal-sdk",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/blackwhitehere/acme-portal"
  },
  "contributes": {
    "viewsWelcome": [
      {
        "view": "acmePortalView",
        "contents": "In order to use extension features, you need to open a folder containing a git repository or clone from a URL.\n[Open Folder](command:vscode.openFolder)\n[Clone Repository](command:git.clone)\n The opened project needs to use acme-portal-sdk.\nTo learn more about how to set it up [read our docs](https://blackwhitehere.github.io/acme-portal-sdk/).",
        "when": "config.git.enabled && git.state == initialized && workbenchState == empty"
      }
    ],
    "commands": [
      {
        "command": "acmeportal.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "acmeportal.itemClicked",
        "title": "Item Clicked"
      },
      {
        "command": "acmeportal.setFlowsPath",
        "title": "Set Path to Flows"
      },
      {
        "command": "acmeportal.openSettings",
        "title": "ACME: Open Settings",
        "icon": "$(gear)"
      },
      {
        "command": "acmeportal.refreshFlows",
        "title": "Refresh Flows",
        "icon": "$(refresh)"
      },
      {
        "command": "acmeportal.openFlowFile",
        "title": "Open Flow File",
        "icon": "$(go-to-file)"
      },
      {
        "command": "acmeportal.promoteEnvironment",
        "title": "Promote Flow",
        "icon": "$(rocket)"
      },
      {
        "command": "acmeportal.deployFlow",
        "title": "Deploy Flow",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "acmeportal.compareFlowVersions",
        "title": "Compare Flow Versions",
        "icon": "$(diff)"
      },
      {
        "command": "acmeportal.openExternalUrl",
        "title": "Open URL",
        "icon": "$(link)"
      }
    ],
    "configuration": {
      "title": "ACME Portal",
      "properties": {
        "acmeportal.flowsPath": {
          "type": "string",
          "default": "flows",
          "description": "Path to directory containing Python flow programs (relative to workspace root)"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "acme-portal-container",
          "title": "ACME Portal",
          "icon": "media/acme-icon.png"
        }
      ]
    },
    "views": {
      "acme-portal-container": [
        {
          "id": "acmePortalView",
          "name": "ACME Resources",
          "when": "acmePortalEnabled"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "acmeportal.openSettings",
          "when": "view == acmePortalView",
          "group": "navigation"
        },
        {
          "command": "acmeportal.refreshFlows",
          "when": "view == acmePortalView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "acmeportal.openFlowFile",
          "when": "view == acmePortalView && viewItem == flow",
          "group": "inline"
        },
        {
          "command": "acmeportal.deployFlow",
          "when": "view == acmePortalView && viewItem =~ /.*deployable.*/",
          "group": "inline"
        },
        {
          "command": "acmeportal.promoteEnvironment",
          "when": "view == acmePortalView && viewItem == flow || view == acmePortalView && viewItem == environment",
          "group": "inline"
        },
        {
          "command": "acmeportal.compareFlowVersions",
          "when": "view == acmePortalView && viewItem == environment",
          "group": "inline"
        },
        {
          "command": "acmeportal.openExternalUrl",
          "when": "view == acmePortalView && viewItem == environment",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "acmeportal.openSettings",
          "title": "ACME: Open Settings"
        },
        {
          "command": "acmeportal.refreshFlows",
          "title": "ACME: Refresh Flows"
        },
        {
          "command": "acmeportal.deployFlow",
          "title": "ACME: Deploy Flow"
        },
        {
          "command": "acmeportal.promoteEnvironment",
          "title": "ACME: Promote Flow"
        },
        {
          "command": "acmeportal.compareFlowVersions",
          "title": "ACME: Compare Flow Versions"
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "acmeportal.gettingStarted",
        "title": "Getting Started with ACME Portal",
        "description": "Learn how to set up and use the ACME Portal extension.",
        "steps": [
          {
            "id": "installPythonExtension",
            "title": "Install Microsoft Python Extension",
            "description": "Ensure the Microsoft Python extension is installed in your VS Code.",
            "media": {
              "image": "media/acme_portal_screen2.png",
              "altText": "ACME Portal Extension"
            },
            "completionEvents": [
              "extensionInstalled:ms-python.python"
            ]
          },
          {
            "id": "selectPythonInterpreter",
            "title": "Select Python Interpreter",
            "description": "Use the `Python: Select Interpreter` command to choose the Python environment for your project.\n [Python: Select Interpreter](command:python.setInterpreter)",
            "media": {
              "image": "media/acme_portal_screen2.png",
              "altText": "ACME Portal Extension"
            },
            "completionEvents": [
              "onCommand:python.setInterpreter"
            ]
          },
          {
            "id": "setupAcmePortalSdk",
            "title": "Set Up acme-portal-sdk",
            "description": "Follow the [acme-portal-sdk documentation](https://blackwhitehere.github.io/acme-portal-sdk/) to set up the SDK in your project.",
            "media": {
              "image": "media/acme_portal_screen2.png",
              "altText": "ACME Portal Extension"
            }
          },
          {
            "id": "installGitCli",
            "title": "Install Git CLI",
            "description": "Ensure the Git CLI is installed and available in your system's PATH.",
            "media": {
              "image": "media/acme_portal_screen2.png",
              "altText": "ACME Portal Extension"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-web": "webpack --mode development",
    "watch-web": "webpack --mode development --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "knip": "knip",
    "package-check": "vsce package --allow-star-activation",
    "docs:build": "mkdocs build",
    "docs:serve": "mkdocs serve",
    "docs:deploy": "mkdocs gh-deploy --force"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.19.2",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.35.1",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.2.1",
    "eslint": "^9.30.0",
    "knip": "^5.61.3",
    "ts-loader": "^9.5.1",
    "typescript": "^5.7.3",
    "webpack": "^5.97.1",
    "webpack-cli": "^5.1.4"
  }
}
