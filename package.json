{
  "name": "acmeportal",
  "displayName": "ACME Portal",
  "publisher": "blackwhitehere",
  "description": "UI to manage python flow deployments via acme-portal-sdk",
  "icon": "media/acme-icon.png",
  "version": "0.0.5",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/blackwhitehere/acme-portal"
  },
  "contributes": {
    "viewsWelcome": [
      {
        "view": "acmePortalView",
        "contents": "In order to use extension features, you need to open a folder containing a git repository or clone from a URL.\n[Open Folder](command:vscode.openFolder)\n[Clone Repository](command:git.clone)\n The opened project needs to use acme-portal-sdk.\nTo learn more about how to set it up [read our docs](https://blackwhitehere.github.io/acme-portal-sdk/).",
        "when": "config.git.enabled && git.state == initialized && workbenchState == empty"
      }
    ],
    "commands": [
      {
        "command": "acmeportal.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "acmeportal.itemClicked",
        "title": "Item Clicked"
      },

      {
        "command": "acmeportal.openSettings",
        "title": "ACME: Open Settings",
        "icon": "$(gear)"
      },
      {
        "command": "acmeportal.refreshFlows",
        "title": "Refresh Flows",
        "icon": "$(refresh)"
      },
      {
        "command": "acmeportal.openFlowFile",
        "title": "Open Flow File",
        "icon": "$(go-to-file)"
      },
      {
        "command": "acmeportal.promoteEnvironment",
        "title": "Promote Flow",
        "icon": "$(rocket)"
      },
      {
        "command": "acmeportal.promoteFlowGroup",
        "title": "Promote Flow Group",
        "icon": "$(rocket)"
      },
      {
        "command": "acmeportal.promoteFlowGroupFromContext",
        "title": "Promote All Flows in Group",
        "icon": "$(rocket)"
      },
      {
        "command": "acmeportal.deployFlow",
        "title": "Deploy Flow",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "acmeportal.deployFlowGroup",
        "title": "Deploy Flow Group",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "acmeportal.deployFlowGroupFromContext",
        "title": "Deploy All Flows in Group",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "acmeportal.compareFlowVersions",
        "title": "Compare Flow Versions",
        "icon": "$(diff)"
      },
      {
        "command": "acmeportal.openExternalUrl",
        "title": "Open URL",
        "icon": "$(link)"
      }
    ],

    "viewsContainers": {
      "activitybar": [
        {
          "id": "acme-portal-container",
          "title": "ACME Portal",
          "icon": "media/acme-icon.png"
        }
      ]
    },
    "views": {
      "acme-portal-container": [
        {
          "id": "acmePortalView",
          "name": "ACME Resources",
          "when": "acmePortalEnabled"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "acmeportal.openSettings",
          "when": "view == acmePortalView",
          "group": "navigation"
        },
        {
          "command": "acmeportal.refreshFlows",
          "when": "view == acmePortalView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "acmeportal.openFlowFile",
          "when": "view == acmePortalView && viewItem == flow",
          "group": "inline"
        },
        {
          "command": "acmeportal.deployFlow",
          "when": "view == acmePortalView && viewItem =~ /.*deployable.*/",
          "group": "inline"
        },
        {
          "command": "acmeportal.deployFlowGroupFromContext",
          "when": "view == acmePortalView && viewItem == group",
          "group": "inline"
        },
        {
          "command": "acmeportal.promoteEnvironment",
          "when": "view == acmePortalView && viewItem == flow || view == acmePortalView && viewItem == environment",
          "group": "inline"
        },
        {
          "command": "acmeportal.promoteFlowGroupFromContext",
          "when": "view == acmePortalView && viewItem == group",
          "group": "inline"
        },
        {
          "command": "acmeportal.compareFlowVersions",
          "when": "view == acmePortalView && viewItem == environment",
          "group": "inline"
        },
        {
          "command": "acmeportal.openExternalUrl",
          "when": "view == acmePortalView && viewItem == environment",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "acmeportal.openSettings",
          "title": "ACME: Open Settings"
        },
        {
          "command": "acmeportal.refreshFlows",
          "title": "ACME: Refresh Flows"
        },
        {
          "command": "acmeportal.deployFlow",
          "title": "ACME: Deploy Flow"
        },
        {
          "command": "acmeportal.deployFlowGroup",
          "title": "ACME: Deploy Flow Group"
        },
        {
          "command": "acmeportal.promoteEnvironment",
          "title": "ACME: Promote Flow"
        },
        {
          "command": "acmeportal.promoteFlowGroup",
          "title": "ACME: Promote Flow Group"
        },
        {
          "command": "acmeportal.compareFlowVersions",
          "title": "ACME: Compare Flow Versions"
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "acmeportal.gettingStarted",
        "title": "Getting Started with ACME Portal",
        "description": "Learn how to set up and use the ACME Portal extension.",
        "steps": [
          {
            "id": "installPythonExtension",
            "title": "Install Microsoft Python Extension",
            "description": "Ensure the Microsoft Python extension is installed in your VS Code.",
            "media": {
              "image": "media/acme_portal_screen2.png",
              "altText": "ACME Portal Extension"
            },
            "completionEvents": [
              "extensionInstalled:ms-python.python"
            ]
          },
          {
            "id": "selectPythonInterpreter",
            "title": "Select Python Interpreter",
            "description": "Use the `Python: Select Interpreter` command to choose the Python environment for your project.\n [Python: Select Interpreter](command:python.setInterpreter)",
            "media": {
              "image": "media/acme_portal_screen2.png",
              "altText": "ACME Portal Extension"
            },
            "completionEvents": [
              "onCommand:python.setInterpreter"
            ]
          },
          {
            "id": "setupAcmePortalSdk",
            "title": "Set Up acme-portal-sdk",
            "description": "Follow the [acme-portal-sdk documentation](https://blackwhitehere.github.io/acme-portal-sdk/) to set up the SDK in your project.",
            "media": {
              "image": "media/acme_portal_screen2.png",
              "altText": "ACME Portal Extension"
            }
          },
          {
            "id": "installGitCli",
            "title": "Install Git CLI",
            "description": "Ensure the Git CLI is installed and available in your system's PATH.",
            "media": {
              "image": "media/acme_portal_screen2.png",
              "altText": "ACME Portal Extension"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./ && mkdir -p out/scripts && cp -R src/scripts/* out/scripts/",
    "watch": "tsc -watch -p ./ && mkdir -p out/scripts && cp -R src/scripts/* out/scripts/",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "node scripts/test.js",
    "test:vscode": "vscode-test",
    "test:unit": "npm run compile && npx mocha 'out/test-unit/**/*.test.js' --ui tdd --timeout 20000",
    "test:integration": "vscode-test",
    "test:ci-fallback": "echo 'VS Code tests skipped due to environment limitations'",
    "knip": "knip",
    "package-check": "vsce package --allow-star-activation",
    "docs:build": "mkdocs build",
    "docs:serve": "mkdocs serve",
    "docs:deploy": "mkdocs gh-deploy --force",
    "check-release-notes": "node scripts/check-release-notes.js",
    "extract-release-notes": "node scripts/extract-release-notes.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.19.9",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.2.1",
    "eslint": "^9.32.0",
    "knip": "^5.62.0",
    "mocha": "^11.7.1",
    "typescript": "^5.9.2"
  }
}
